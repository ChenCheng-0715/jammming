{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FrontEnd_Practice\\\\reactApp\\\\jammming\\\\src\\\\Components\\\\App\\\\App.js\";\nimport './App.css';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport React from 'react';\nimport Spotify from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSpotify.getAccessToken();\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"\",\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    this.setState(prev => ({\n      playlistTracks: [...prev.playlistTracks, track]\n    }));\n  }\n\n  removeTrack(track) {\n    this.setState({\n      playlistTracks: this.state.playlistTracks.filter(t => t != track)\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    let trackURIs = this.state.playlistTracks.map(track => track.uri);\n    console.log(trackURIs);\n    console.log(this.state.playlistName);\n    Spotify.savePlaylist(this.state.playlistName, trackURIs);\n    this.setState({\n      playlistName: \"\"\n    });\n    this.setState({\n      playlistTracks: []\n    });\n  }\n\n  search(term) {\n    // console.log(term);\n    Spotify.search(term).then(searchResults => this.setState({\n      searchResults: searchResults\n    })); // console.log(this.state.searchResults);\n    // this.setState({ searchResults: Spotify.search(term) });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            playlistTracks: this.state.playlistTracks,\n            playlistName: this.state.playlistName,\n            onRemove: this.removeTrack,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/FrontEnd_Practice/reactApp/jammming/src/Components/App/App.js"],"names":["SearchBar","SearchResults","Playlist","React","Spotify","getAccessToken","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","find","savedTrack","id","setState","prev","filter","t","name","trackURIs","map","uri","console","log","term","then","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport React from 'react';\nimport Spotify from '../../util/Spotify';\n\nSpotify.getAccessToken();\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { searchResults: [],\n    \n      playlistName: \"\",\n\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n\n  addTrack(track) {\n    if (this.state.playlistTracks.find(savedTrack => savedTrack.id  === track.id)) {\n      return;\n    }\n    this.setState(prev => ({\n      playlistTracks: [...prev.playlistTracks, track]\n    }));\n\n  }\n\n  removeTrack(track) {\n    this.setState({ playlistTracks: this.state.playlistTracks.filter(t => t != track) });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name });\n  }\n\n  savePlaylist() {\n    let trackURIs = this.state.playlistTracks.map(track => track.uri);\n    console.log(trackURIs);\n    console.log(this.state.playlistName);\n    Spotify.savePlaylist(this.state.playlistName, trackURIs);\n    this.setState({ playlistName: \"\" });\n    this.setState({ playlistTracks: [] });\n  }\n\n  search(term) {\n    // console.log(term);\n    Spotify.search(term).then(searchResults => this.setState({\n      searchResults: searchResults\n    }));\n    \n    // console.log(this.state.searchResults);\n    // this.setState({ searchResults: Spotify.search(term) });\n  }\n\n\n  render() {\n      return (\n\n        <div>\n            <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n            <div className=\"App\">\n                {/* <!-- Add a SearchBar component --> */}\n                <SearchBar onSearch={this.search} />\n                <div className=\"App-playlist\">\n                    {/* <!-- Add a SearchResults component --> */}\n                    <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n                    {/* <!-- Add a Playlist component --> */}\n                    <Playlist playlistTracks={this.state.playlistTracks} playlistName={this.state.playlistName} onRemove={this.removeTrack} onNameChange={this.updatePlaylistName} onSave={this.savePlaylist} />\n                </div>\n            </div>\n        </div>\n      );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}